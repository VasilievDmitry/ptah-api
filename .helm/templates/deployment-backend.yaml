{{- $app := .Values.app -}}
{{- $depBack := .Values.backend -}}
{{- $depBackName := printf "%s-%s" .Release.Name $depBack.name }}
{{- $depFront := .Values.frontend -}}
{{- $depFrontName := printf "%s-%s" .Release.Name $depFront.name }}
kind: PersistentVolume
apiVersion: v1
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: {{ .Release.Name }}-share
  labels:
    app: {{ $app.name }}
spec:
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-share
    path: "/home/nfsroot/k8sdata/p1ptahapi-share"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-share
spec:
  storageClassName: ""
  selector:
    matchLabels:
      app: {{ $app.name }}  
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ $app.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations: 
    released: {{ .Release.Time}}    
spec:
  selector:
    matchLabels:
      app: {{ $app.name }}
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  replicas: {{ $app.replicas }} 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ $app.name }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      volumes:
      - name: {{ .Release.Name }}-share
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-share
      - name: {{ $depFrontName }}-configmap
        configMap:
          name: {{ $depFrontName }}
      serviceAccountName: {{ .Release.Name }}
      containers:
      - name: {{ $depBack.name }}
        image: {{ $depBack.image }}:{{ $depBack.imageTag }}
        env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_HOST
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_NAME
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_USER
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_PASS
          - name: JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: jwt_key
        ports:
        - containerPort: {{$depBack.port}}
        volumeMounts:
        - name: {{ .Release.Name }}-share
          mountPath: {{ $app.mountPath }}
          readOnly: false
      - name: {{ $depFront.name }}
        image: {{ $depFront.image }}:{{ $depFront.imageTag }}
        ports:
        - containerPort: {{ $depFront.port }}
        livenessProbe:
          httpGet:
            path: /_healthz
            port: {{ $depFront.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: {{ $depFrontName }}-configmap
          mountPath: {{ $depFront.configMap.mountPath }}
          readOnly: true
        - name: {{ .Release.Name }}-share
          mountPath: {{ $app.mountPath }}
          readOnly: false
