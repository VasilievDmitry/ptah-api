{{- $deployment := .Values.backend -}}
{{- $deploymentName := printf "%s-%s" .Release.Name $deployment.name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
    app: {{ .Chart.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: {{ $deployment.role }}
  annotations: 
    released: {{ .Release.Time}}    
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: {{ $deployment.role }}
  replicas: {{ $deployment.replicas }} 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: {{ $deployment.role }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
      - name: {{ $deployment.name }}
        image: {{ $deployment.image }}:{{ $deployment.imageTag }}
        env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_HOST
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_NAME
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_USER
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: DB_PASS
          - name: JWT_SIGNATURE_SECRET
            valueFrom:
              secretKeyRef:
                name: p1ptahapi-env
                key: jwt_key
        ports:
        - containerPort: {{$deployment.port}}
#        livenessProbe:
#          httpGet:
#            path: /health
#            port: {{ $deployment.port }}
#          initialDelaySeconds: 15
#          timeoutSeconds: 1
#          failureThreshold: 3
#          periodSeconds: 5
